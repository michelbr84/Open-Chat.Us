import { SecurityReport } from "@/pages/GitHubSecurityChecker";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Download, FileText, Settings, GitBranch } from "lucide-react";
import { useToast } from "@/hooks/use-toast";

interface SecurityActionsProps {
  report: SecurityReport;
}

export const SecurityActions = ({ report }: SecurityActionsProps) => {
  const { toast } = useToast();

  const generatePDFReport = () => {
    // Create a simplified PDF-like content
    const reportContent = `
GitHub Security Analysis Report
==============================

Repository: ${report.repoUrl}
Analysis Date: ${new Date(report.timestamp).toLocaleString()}
Security Score: ${report.score}/100
Files Scanned: ${report.scannedFiles}/${report.totalFiles}

Security Checks:
${report.checks.map(check => `
- ${check.name}: ${check.status.toUpperCase()}
  Severity: ${check.severity.toUpperCase()}
  ${check.message}
  ${check.solution ? `Solution: ${check.solution}` : ''}
`).join('\n')}

Generated by GitHub Security Checker
    `.trim();

    const blob = new Blob([reportContent], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `security-report-${new Date().toISOString().split('T')[0]}.txt`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);

    toast({
      title: "Report Downloaded",
      description: "Security report has been downloaded as a text file.",
    });
  };

  const generateGitignore = () => {
    const gitignoreContent = `# Environment variables
.env
.env.local
.env.*.local

# API keys and secrets
config/secrets.yml
config/database.yml
*.pem
*.key
*.crt

# Dependencies
node_modules/
vendor/
.pnp
.pnp.js

# Build outputs
/build
/dist
/.next/
/out/

# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Database
*.sqlite
*.sqlite3
*.db

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# IDE files
.vscode/
.idea/
*.swp
*.swo
*~

# Temporary files
*.tmp
*.temp
.cache/
`;

    const blob = new Blob([gitignoreContent], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = '.gitignore';
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);

    toast({
      title: "Gitignore Downloaded",
      description: "A recommended .gitignore file has been downloaded.",
    });
  };

  const copyChecklist = () => {
    const checklist = `# Security Checklist for ${report.repoUrl}

${report.checks.map(check => 
  `- [${check.status === 'pass' ? 'x' : ' '}] ${check.name}: ${check.message}`
).join('\n')}

Security Score: ${report.score}/100
Generated: ${new Date(report.timestamp).toLocaleString()}
`;

    navigator.clipboard.writeText(checklist);
    toast({
      title: "Checklist Copied",
      description: "Security checklist has been copied to your clipboard.",
    });
  };

  return (
    <Card>
      <CardHeader>
        <CardTitle>Quick Actions</CardTitle>
      </CardHeader>
      <CardContent>
        <div className="grid gap-3 md:grid-cols-2 lg:grid-cols-4">
          <Button onClick={generatePDFReport} variant="outline" className="w-full">
            <Download className="mr-2 h-4 w-4" />
            Download Report
          </Button>
          
          <Button onClick={generateGitignore} variant="outline" className="w-full">
            <FileText className="mr-2 h-4 w-4" />
            Get .gitignore
          </Button>
          
          <Button onClick={copyChecklist} variant="outline" className="w-full">
            <Settings className="mr-2 h-4 w-4" />
            Copy Checklist
          </Button>
          
          <Button 
            variant="outline" 
            className="w-full"
            asChild
          >
            <a 
              href={`${report.repoUrl}/settings/security`} 
              target="_blank" 
              rel="noopener noreferrer"
            >
              <GitBranch className="mr-2 h-4 w-4" />
              Repo Settings
            </a>
          </Button>
        </div>
      </CardContent>
    </Card>
  );
};